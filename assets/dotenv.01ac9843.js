import{g as D}from"./@babel.a48f8056.js";var u={exports:{}};const N={},b=Object.freeze(Object.defineProperty({__proto__:null,default:N},Symbol.toStringTag,{value:"Module"})),v=D(b),V="dotenv",w="16.4.4",T="Loads environment variables from .env file",O="lib/main.js",I="lib/main.d.ts",$={".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},x={"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},k={type:"git",url:"git://github.com/motdotla/dotenv.git"},A="https://dotenvx.com",j=["dotenv","env",".env","environment","variables","config","settings"],K="README.md",Y="BSD-2-Clause",L={"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},R={node:">=12"},S={fs:!1},P={name:V,version:w,description:T,main:O,types:I,exports:$,scripts:x,repository:k,funding:A,keywords:j,readmeFilename:K,license:Y,devDependencies:L,engines:R,browser:S},f=v,h=v,F=v,B=v,U=P,E=U.version,M=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function C(e){const n={};let r=e.toString();r=r.replace(/\r\n?/mg,`
`);let c;for(;(c=M.exec(r))!=null;){const a=c[1];let t=c[2]||"";t=t.trim();const s=t[0];t=t.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),s==='"'&&(t=t.replace(/\\n/g,`
`),t=t.replace(/\\r/g,"\r")),n[a]=t}return n}function W(e){const n=_(e),r=i.configDotenv({path:n});if(!r.parsed){const s=new Error(`MISSING_DATA: Cannot parse ${n} for an unknown reason`);throw s.code="MISSING_DATA",s}const c=y(e).split(","),a=c.length;let t;for(let s=0;s<a;s++)try{const o=c[s].trim(),l=J(r,o);t=i.decrypt(l.ciphertext,l.key);break}catch(o){if(s+1>=a)throw o}return i.parse(t)}function q(e){console.log(`[dotenv@${E}][INFO] ${e}`)}function G(e){console.log(`[dotenv@${E}][WARN] ${e}`)}function p(e){console.log(`[dotenv@${E}][DEBUG] ${e}`)}function y(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:{}.DOTENV_KEY&&{}.DOTENV_KEY.length>0?{}.DOTENV_KEY:""}function J(e,n){let r;try{r=new URL(n)}catch(o){if(o.code==="ERR_INVALID_URL"){const l=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw l.code="INVALID_DOTENV_KEY",l}throw o}const c=r.password;if(!c){const o=new Error("INVALID_DOTENV_KEY: Missing key part");throw o.code="INVALID_DOTENV_KEY",o}const a=r.searchParams.get("environment");if(!a){const o=new Error("INVALID_DOTENV_KEY: Missing environment part");throw o.code="INVALID_DOTENV_KEY",o}const t=`DOTENV_VAULT_${a.toUpperCase()}`,s=e.parsed[t];if(!s){const o=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${t} in your .env.vault file.`);throw o.code="NOT_FOUND_DOTENV_ENVIRONMENT",o}return{ciphertext:s,key:c}}function _(e){let n=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(const r of e.path)f.existsSync(r)&&(n=r.endsWith(".vault")?r:`${r}.vault`);else n=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else n=h.resolve(process.cwd(),".env.vault");return f.existsSync(n)?n:null}function m(e){return e[0]==="~"?h.join(F.homedir(),e.slice(1)):e}function Q(e){q("Loading env from encrypted .env.vault");const n=i._parseVault(e);let r=process.env;return e&&e.processEnv!=null&&(r=e.processEnv),i.populate(r,n,e),{parsed:n}}function z(e){const n=h.resolve(process.cwd(),".env");let r="utf8";const c=Boolean(e&&e.debug);e&&e.encoding?r=e.encoding:c&&p("No encoding is specified. UTF-8 is used by default");let a=[];if(e&&e.path){if(!Array.isArray(e.path))f.existsSync(e.path)&&(a=[m(e.path)]);else for(const o of e.path)f.existsSync(o)&&a.push(m(o));a.length||(a=[n])}const t=a.length?a:[n],s={};try{for(const l of t){const g=i.parse(f.readFileSync(l,{encoding:r}));i.populate(s,g,e)}let o=process.env;e&&e.processEnv!=null&&(o=e.processEnv),i.populate(o,s,e)}catch(o){return c&&p(`Failed to load ${t} ${o.message}`),{error:o}}return{parsed:s}}function H(e){if(y(e).length===0)return i.configDotenv(e);const n=_(e);return n?i._configVault(e):(G(`You set DOTENV_KEY but you are missing a .env.vault file at ${n}. Did you forget to build it?`),i.configDotenv(e))}function X(e,n){const r=Buffer.from(n.slice(-64),"hex");let c=Buffer.from(e,"base64");const a=c.subarray(0,12),t=c.subarray(-16);c=c.subarray(12,-16);try{const s=B.createDecipheriv("aes-256-gcm",r,a);return s.setAuthTag(t),`${s.update(c)}${s.final()}`}catch(s){const o=s instanceof RangeError,l=s.message==="Invalid key length",g=s.message==="Unsupported state or unable to authenticate data";if(o||l){const d=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw d.code="INVALID_DOTENV_KEY",d}else if(g){const d=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw d.code="DECRYPTION_FAILED",d}else throw s}}function Z(e,n,r={}){const c=Boolean(r&&r.debug),a=Boolean(r&&r.override);if(typeof n!="object"){const t=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw t.code="OBJECT_REQUIRED",t}for(const t of Object.keys(n))Object.prototype.hasOwnProperty.call(e,t)?(a===!0&&(e[t]=n[t]),c&&p(a===!0?`"${t}" is already defined and WAS overwritten`:`"${t}" is already defined and was NOT overwritten`)):e[t]=n[t]}const i={configDotenv:z,_configVault:Q,_parseVault:W,config:H,decrypt:X,parse:C,populate:Z};u.exports.configDotenv=i.configDotenv;u.exports._configVault=i._configVault;u.exports._parseVault=i._parseVault;u.exports.config=i.config;u.exports.decrypt=i.decrypt;u.exports.parse=i.parse;u.exports.populate=i.populate;u.exports=i;
